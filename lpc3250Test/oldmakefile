################################################################################
# based on managed file, modified to be generic
# lpc3250 Test makefile
################################################################################
ifeq ($(PLT),)
  $(error PLT not defined by make invocation)
endif

MAKE_DIR=../build
-include $(MAKE_DIR)/makedef.mk
-include $(MAKE_DIR)/makerules.mk
-include $(MAKE_DIR)/makeenv.mk
-include $(MAKE_DIR)/makesource.mk
-include $(MAKE_DIR)/makeplt.mk


#define outputLIB file
OUT_EXE = lpc3250Test

# modify includes for local includes
INCLUDES += -I../AppIncludes
INCLUDES += -I../lpc3250
INCLUDES += -I../ZediCommon
INCLUDES += -I../zhal

#modify LIBPATH... with local needed paths
LIB_PATH += -L ../sharedlibs/$(PLT)

#define Libraries needed by this build here (linking)
LIBS += -llog4cplus 
LIBS += -llpc3250 
LIBS += -lZediCommon 
LIBS += -lgmock
LIBS += -lgtest
LIBS += -lgpiod
LIBS += -lpthread
LIBS += -lrt
LIBS += -lcjson

# All Target (default)
all: $(OUT_DIR) dependents $(OUT_DIR)/$(OUT_EXE)

ifneq ($(MAKECMDGOALS),clean)
ifneq ($(strip $(C++_DEPS)),)
-include $(C++_DEPS)
endif
ifneq ($(strip $(C_DEPS)),)
-include $(C_DEPS)
endif
ifneq ($(strip $(CC_DEPS)),)
-include $(CC_DEPS)
endif
ifneq ($(strip $(CPP_DEPS)),)
-include $(CPP_DEPS)
endif
ifneq ($(strip $(CXX_DEPS)),)
-include $(CXX_DEPS)
endif
ifneq ($(strip $(C_UPPER_DEPS)),)
-include $(C_UPPER_DEPS)
endif
endif

# Add inputs and outputs from these tool invocations to the build variables 

dependents: 
	cd ../ZediCommon && $(MAKE) PLT=$(PLT) all
	cd ../lpc3250 && $(MAKE) PLT=$(PLT) all

# make sure the output dir exists.
$(OUT_DIR):
	$(MKDIR) $(OUT_DIR)

# Tool invocations
$(OUT_DIR)/$(OUT_EXE): $(OBJS) $(USER_OBJS) dependents
	@echo 'Building target: $@'
	@echo 'Invoking: GCC C++ Linker'
	$(CXX) -o $@ $(OBJS) $(USER_OBJS) $(LIB_PATH) $(LIBS) $(L_FLAGS)
	@echo 'Finished building target: $@'

# Other Targets
cleanall: clean
	-cd ../ZediCommon && $(MAKE) PLT=$(PLT) clean

clean:
	-$(RM) $(OBJS)$(C++_DEPS)$(C_DEPS)$(CC_DEPS)$(LIBRARIES)$(CPP_DEPS)$(CXX_DEPS)$(C_UPPER_DEPS) $(OUT_DIR)/$(OUT_EXE)
	-@echo ' '

# no post build for this project
post-build:

.PHONY: all clean dependents cleanall outdir
.SECONDARY: post-build


